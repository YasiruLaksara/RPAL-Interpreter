<IDENTIFIER> let
<IDENTIFIER> Sum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> ,
<IDENTIFIER> Order
<IDENTIFIER> A
<PUNCTUATION> )
<IDENTIFIER> where
<IDENTIFIER> rec
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> N
<IDENTIFIER> eq
<INTEGER> 0
<OPERATOR> ->
<INTEGER> 0
<OPERATOR> |
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<OPERATOR> -
<INTEGER> 1
<PUNCTUATION> )
<OPERATOR> +
<IDENTIFIER> T
<IDENTIFIER> N
<IDENTIFIER> in
<IDENTIFIER> Print
<PUNCTUATION> (
<IDENTIFIER> Sum
<PUNCTUATION> (
<INTEGER> 1
<PUNCTUATION> ,
<INTEGER> 2
<PUNCTUATION> ,
<INTEGER> 3
<PUNCTUATION> ,
<INTEGER> 4
<PUNCTUATION> ,
<INTEGER> 5
<PUNCTUATION> )
<PUNCTUATION> )
<IDENTIFIER> let
<IDENTIFIER> Sum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> ,
<IDENTIFIER> Order
<IDENTIFIER> A
<PUNCTUATION> )
<IDENTIFIER> where
<IDENTIFIER> rec
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> N
<IDENTIFIER> eq
<INTEGER> 0
<OPERATOR> ->
<INTEGER> 0
<OPERATOR> |
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<OPERATOR> -
<INTEGER> 1
<PUNCTUATION> )
<OPERATOR> +
<IDENTIFIER> T
<IDENTIFIER> N
<IDENTIFIER> in
<IDENTIFIER> Print
<PUNCTUATION> (
<IDENTIFIER> Sum
<PUNCTUATION> (
<INTEGER> 1
<PUNCTUATION> ,
<INTEGER> 2
<PUNCTUATION> ,
<INTEGER> 3
<PUNCTUATION> ,
<INTEGER> 4
<PUNCTUATION> ,
<INTEGER> 5
<PUNCTUATION> )
<PUNCTUATION> )
<IDENTIFIER> let
<IDENTIFIER> Sum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> ,
<IDENTIFIER> Order
<IDENTIFIER> A
<PUNCTUATION> )
<IDENTIFIER> where
<IDENTIFIER> rec
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> N
<IDENTIFIER> eq
<INTEGER> 0
<OPERATOR> ->
<INTEGER> 0
<OPERATOR> |
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<OPERATOR> -
<INTEGER> 1
<PUNCTUATION> )
<OPERATOR> +
<IDENTIFIER> T
<IDENTIFIER> N
<IDENTIFIER> in
<IDENTIFIER> Print
<PUNCTUATION> (
<IDENTIFIER> Sum
<PUNCTUATION> (
<INTEGER> 1
<PUNCTUATION> ,
<INTEGER> 2
<PUNCTUATION> ,
<INTEGER> 3
<PUNCTUATION> ,
<INTEGER> 4
<PUNCTUATION> ,
<INTEGER> 5
<PUNCTUATION> )
<PUNCTUATION> )
<IDENTIFIER> let
<IDENTIFIER> Sum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> ,
<IDENTIFIER> Order
<IDENTIFIER> A
<PUNCTUATION> )
<IDENTIFIER> where
<IDENTIFIER> rec
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> N
<IDENTIFIER> eq
<INTEGER> 0
<OPERATOR> ->
<INTEGER> 0
<OPERATOR> |
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<OPERATOR> -
<INTEGER> 1
<PUNCTUATION> )
<OPERATOR> +
<IDENTIFIER> T
<IDENTIFIER> N
<IDENTIFIER> in
<IDENTIFIER> Print
<PUNCTUATION> (
<IDENTIFIER> Sum
<PUNCTUATION> (
<INTEGER> 1
<PUNCTUATION> ,
<INTEGER> 2
<PUNCTUATION> ,
<INTEGER> 3
<PUNCTUATION> ,
<INTEGER> 4
<PUNCTUATION> ,
<INTEGER> 5
<PUNCTUATION> )
<PUNCTUATION> )
<IDENTIFIER> let
<IDENTIFIER> Sum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> ,
<IDENTIFIER> Order
<IDENTIFIER> A
<PUNCTUATION> )
<IDENTIFIER> where
<IDENTIFIER> rec
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> N
<IDENTIFIER> eq
<INTEGER> 0
<OPERATOR> ->
<INTEGER> 0
<OPERATOR> |
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<OPERATOR> -
<INTEGER> 1
<PUNCTUATION> )
<OPERATOR> +
<IDENTIFIER> T
<IDENTIFIER> N
<IDENTIFIER> in
<IDENTIFIER> Print
<PUNCTUATION> (
<IDENTIFIER> Sum
<PUNCTUATION> (
<INTEGER> 1
<PUNCTUATION> ,
<INTEGER> 2
<PUNCTUATION> ,
<INTEGER> 3
<PUNCTUATION> ,
<INTEGER> 4
<PUNCTUATION> ,
<INTEGER> 5
<PUNCTUATION> )
<PUNCTUATION> )
<IDENTIFIER> let
<IDENTIFIER> Sum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> ,
<IDENTIFIER> Order
<IDENTIFIER> A
<PUNCTUATION> )
<IDENTIFIER> where
<IDENTIFIER> rec
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> N
<IDENTIFIER> eq
<INTEGER> 0
<OPERATOR> ->
<INTEGER> 0
<OPERATOR> |
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<OPERATOR> -
<INTEGER> 1
<PUNCTUATION> )
<OPERATOR> +
<IDENTIFIER> T
<IDENTIFIER> N
<IDENTIFIER> in
<IDENTIFIER> Print
<PUNCTUATION> (
<IDENTIFIER> Sum
<PUNCTUATION> (
<INTEGER> 1
<PUNCTUATION> ,
<INTEGER> 2
<PUNCTUATION> ,
<INTEGER> 3
<PUNCTUATION> ,
<INTEGER> 4
<PUNCTUATION> ,
<INTEGER> 5
<PUNCTUATION> )
<PUNCTUATION> )
<IDENTIFIER> let
<IDENTIFIER> Sum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> ,
<IDENTIFIER> Order
<IDENTIFIER> A
<PUNCTUATION> )
<IDENTIFIER> where
<IDENTIFIER> rec
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> N
<IDENTIFIER> eq
<INTEGER> 0
<OPERATOR> ->
<INTEGER> 0
<OPERATOR> |
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<OPERATOR> -
<INTEGER> 1
<PUNCTUATION> )
<OPERATOR> +
<IDENTIFIER> T
<IDENTIFIER> N
<IDENTIFIER> in
<IDENTIFIER> Print
<PUNCTUATION> (
<IDENTIFIER> Sum
<PUNCTUATION> (
<INTEGER> 1
<PUNCTUATION> ,
<INTEGER> 2
<PUNCTUATION> ,
<INTEGER> 3
<PUNCTUATION> ,
<INTEGER> 4
<PUNCTUATION> ,
<INTEGER> 5
<PUNCTUATION> )
<PUNCTUATION> )
<IDENTIFIER> let
<IDENTIFIER> Sum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> A
<PUNCTUATION> ,
<IDENTIFIER> Order
<IDENTIFIER> A
<PUNCTUATION> )
<IDENTIFIER> where
<IDENTIFIER> rec
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<PUNCTUATION> )
<OPERATOR> =
<IDENTIFIER> N
<IDENTIFIER> eq
<INTEGER> 0
<OPERATOR> ->
<INTEGER> 0
<OPERATOR> |
<IDENTIFIER> Psum
<PUNCTUATION> (
<IDENTIFIER> T
<PUNCTUATION> ,
<IDENTIFIER> N
<OPERATOR> -
<INTEGER> 1
<PUNCTUATION> )
<OPERATOR> +
<IDENTIFIER> T
<IDENTIFIER> N
<IDENTIFIER> in
<IDENTIFIER> Print
<PUNCTUATION> (
<IDENTIFIER> Sum
<PUNCTUATION> (
<INTEGER> 1
<PUNCTUATION> ,
<INTEGER> 2
<PUNCTUATION> ,
<INTEGER> 3
<PUNCTUATION> ,
<INTEGER> 4
<PUNCTUATION> ,
<INTEGER> 5
<PUNCTUATION> )
<PUNCTUATION> )
